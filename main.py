import logging
import setting
from pymongo import MongoClient
from bs4 import BeautifulSoup
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.dispatcher.filters import Text
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ParseMode, CallbackQuery
from aiogram.utils import executor
from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
)
from aiogram.utils.callback_data import CallbackData
import requests


TOKEN = setting.token
admin_chat_id = setting.admin_chat_id
priem_chat_id = setting.priem_chat_id
cluster = MongoClient(setting.mongo)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
db = cluster["Ded_Moroz_Data"]
# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ç–∞–±–ª–∏—Ü–µ(–∫–æ–ª–ª–µ–∫—Ü–∏–∏)
workers = db["Bots_Data"]

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
bot = Bot(token=TOKEN)
# –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π storage, –æ–Ω–æ –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–∑–∂–µ.
storage = MemoryStorage()
# –°–æ–∑–¥–∞—ë–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ bot –∏ storage
dp = Dispatcher(bot, storage=storage)
# –î–æ–±–∞–≤–ª—è–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –º–∏–¥–¥–ª–≤–∞—Ä—å –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
dp.middleware.setup(LoggingMiddleware())

# –ü—Ä–æ–ø–∏—à–µ–º –ø—Ä–æ—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–∑ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–∏
reg_button = KeyboardButton("üì© –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É –≤–∏–∑–∏—Ç–∞")
reg_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
reg_keyboard.add(reg_button)



# –ü—Ä–æ–ø–∏—à–µ–º –ø—Ä–æ—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –û—Ç–º–µ–Ω–∞ –∏–∑ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–∏
cancel_button = KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")

cancel_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
cancel_keyboard.add(cancel_button)

# –ü—Ä–æ–ø–∏—à–µ–º –ø—Ä–æ—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏–∑ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–∏
next_button = KeyboardButton("‚ùé –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
next_button2 = KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")
next_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
next_keyboard.add(next_button)
next_keyboard.add(next_button2)

# –ü—Ä–æ–ø–∏—à–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
next_com_button = KeyboardButton("‚ùé –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")
next_com_button2 = KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")
next_com_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
next_com_keyboard.add(next_com_button)
next_com_keyboard.add(next_com_button2)

# –ü—Ä–æ–ø–∏—à–µ–º –¥–∞—Ç—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è
date_button22 = KeyboardButton("22.12.2022")
date_button23 = KeyboardButton("23.12.2022")
date_button24 = KeyboardButton("24.12.2022")
date_button25 = KeyboardButton("25.12.2022")
date_button26 = KeyboardButton("26.12.2022")
date_button27 = KeyboardButton("27.12.2022")
date_button28 = KeyboardButton("28.12.2022")
date_button29 = KeyboardButton("29.12.2022")
date_button30 = KeyboardButton("30.12.2022")
date_button31 = KeyboardButton("31.12.2022")
date_button01 = KeyboardButton("01.01.2023")
date_button02 = KeyboardButton("02.01.2023")
date_button03 = KeyboardButton("03.01.2023")
date_button04 = KeyboardButton("04.01.2023")
date_button05 = KeyboardButton("05.01.2023")
date_button06 = KeyboardButton("06.01.2023")
date_button07 = KeyboardButton("07.01.2023")
date_button08 = KeyboardButton("08.01.2023")
date_button09 = KeyboardButton("09.01.2023")
date_button10 = KeyboardButton("10.01.2023")
date_button11 = KeyboardButton("11.01.2023")
date_button12 = KeyboardButton("12.01.2023")
date_button13 = KeyboardButton("13.01.2023")
date_button14 = KeyboardButton("14.01.2023")

date_button_cancel = KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")

date_button = ReplyKeyboardMarkup(resize_keyboard=True)
date_button.add(date_button_cancel)


date_button.add(date_button22, date_button23, date_button24)
date_button.add(date_button25, date_button26, date_button27)
date_button.add(date_button28, date_button29, date_button30)
date_button.add(date_button31)
date_button.add(date_button01, date_button02, date_button03)
date_button.add(date_button04, date_button05, date_button06)
date_button.add(date_button07, date_button08, date_button09)
date_button.add(date_button10, date_button11, date_button12)
date_button.add(date_button13, date_button14)
date_button.add()


# –ü—Ä–æ–ø–∏—à–µ–º –≤—Ä–µ–º—è
time_button1 = KeyboardButton("C 10:00 –¥–æ 12:00")
time_button2 = KeyboardButton("C 12:00 –¥–æ 14:00")
time_button3 = KeyboardButton("C 14:00 –¥–æ 16:00")
time_button4 = KeyboardButton("C 16:00 –¥–æ 18:00")
time_button5 = KeyboardButton("C 18:00 –¥–æ 20:00")
time_button6 = KeyboardButton("C 20:00 –¥–æ 22:00")
time_button_cancel = KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")

time_button = ReplyKeyboardMarkup(resize_keyboard=True)
time_button.add(date_button_cancel)
time_button.add(time_button1, time_button2, time_button3,)
time_button.add(time_button4, time_button5, time_button6,)
time_button.add()

# –ü—Ä–æ–ø–∏—à–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —á–∞—Ç–∞ –∞–¥–º–∏–Ω–æ–≤
# –ó–∞–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã Callback –¥–∞–Ω–Ω—ã—Ö
reg_callback = CallbackData("reg", "status", "chat_id", "nick", "date_z", "name_c")


# –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–ª–∞–≤—É –≤ —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã –±—ã–ª–æ —É–¥–æ–±–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
def inline(chat_id, nick, date_z, name_c):
    confirm = InlineKeyboardButton(
        text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å",
        callback_data=reg_callback.new(
            status="1", chat_id=chat_id, nick=nick, date_z=date_z, name_c=name_c
        ),
    )
    cancel = InlineKeyboardButton(
        text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",
        callback_data=reg_callback.new(
            status="0", chat_id=chat_id, nick="-", date_z="-", name_c="-"
        ),
    )
    conf_inline = InlineKeyboardMarkup()
    conf_inline.insert(confirm).insert(cancel)
    return conf_inline

## –û—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏
def inline2(chat_id, nick, date_z, name_c):
    cancel = InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
        callback_data=reg_callback.new(
            status="00", chat_id=chat_id, nick="-", date_z="-", name_c="-"
        ),
    )
    conf_inline = InlineKeyboardMarkup()
    conf_inline.insert(cancel)
    return conf_inline

## –û—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏
def inline3(chat_id, nick, date_z, name_c):
    cancel = InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",

    )
    conf_inline = InlineKeyboardMarkup()
    conf_inline.insert(cancel)
    return conf_inline

# –°–æ–∑–¥–∞—ë–º –∫–ª–∞—Å—Å, –ø–µ—Ä–µ–¥–∞—ë–º –≤ –Ω–µ–≥–æ StatesGroup, –æ–Ω –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Å—Ç–∏ —é–∑–µ—Ä–∞ —á–µ—Ä–µ–∑ –∞–Ω–∫–µ—Ç—É
# –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç. –ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ —Ö–æ—á–µ—Ç –ø–æ—á–∏—Ç–∞—Ç—å –ø–æ–ø–æ–¥—Ä–æ–±–Ω–µ–µ, –∑–∞–≥—É–≥–ª–∏—Ç–µ "aiogram –º–∞—à–∏–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π"
class Anketa(StatesGroup):
    # –≤–Ω—É—Ç—Ä–∏ –æ–±—ä—è–≤–ª—è–µ–º –°—Ç–µ–π—Ç—ã(—Å–æ—Å—Ç–æ—è–Ω–∏—è), –¥–∞–ª–µ–µ –º—ã –±—É–¥–µ–º –≤–µ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ü–µ–ø–æ—á–∫–µ —ç—Ç–∏—Ö —Å—Ç–µ–π—Ç–æ–≤
    date_z = State()
    timer_r = State()
    model_r = State()
    name_c = State()
    date_r = State()
    nomer_ts = State()
    comments = State()
    text = State()

@dp.message_handler(commands=["start"])
async def welcome(message: types.Message):

        await bot.send_message(
            message.chat.id,
            f"<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, {message.from_user.username}!</b>\n\n"
            f"–ß—Ç–æ–±—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –≤–∏–∑–∏—Ç –î–µ–¥–∞ –ú–æ—Ä–æ–∑–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \nüëá\n<b>‚úâ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É –≤–∏–∑–∏—Ç–∞</b>",
            parse_mode=ParseMode.HTML,
            reply_markup=reg_keyboard,
        )

@dp.message_handler(Text(equals="/instagram"), state="*")
async def problem(message: types.Message, state: FSMContext):
    await bot.send_message(
        message.chat.id,
        f"<b>üëâ –≠—Ç–æ –Ω–∞—à Instagram:</b>\nhttps://instagram.com/idedmoroz",
        parse_mode=ParseMode.HTML,
    )

@dp.message_handler(Text(equals="/whatsapp"), state="*")
async def problem(message: types.Message, state: FSMContext):
    await bot.send_message(
        message.chat.id,
        f"<b>üëâ –≠—Ç–æ —á–∞—Ç —Å –Ω–∞–º–∏: https://bit.ly/3vd8ubW</b>\n–ï—Å—Ç—å –≤–ø–æ—Ä–æ—Å? –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º!",
        parse_mode=ParseMode.HTML,
    )

@dp.message_handler(Text(equals="/site"), state="*")
async def problem(message: types.Message, state: FSMContext):
    await bot.send_message(
        message.chat.id,
        f"<b>üëâ –≠—Ç–æ –Ω–∞—à —Å–∞–π—Ç: https://github.com/Casqeaux</b>\n–ó–∞—Ö–æ–¥–∏—Ç–µ –∫ –Ω–∞–º!",
        parse_mode=ParseMode.HTML,
    )

@dp.message_handler(Text(equals="/date"), state="*")
async def problem(message: types.Message, state: FSMContext):
    await bot.send_message(
        message.chat.id,
        f"<b>üëâ –≠—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –¥–∞—Ç: https://bit.ly/3Wg2AD3</b>\n–°–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º—è –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
        parse_mode=ParseMode.HTML,
    )

@dp.message_handler(Text(equals="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"), state="*")
async def menu_button(message: types.Message, state: FSMContext):
    await state.finish()
    await bot.send_message(
        message.chat.id,

        f"<b>üéØ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –≤–∏–∑–∏—Ç –î–µ–¥–∞ –ú–æ—Ä–æ–∑–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞, {message.from_user.username}!</b>\n\n"
        f"–ß—Ç–æ–±—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –≤–∏–∑–∏—Ç –î–µ–¥–∞ –ú–æ—Ä–æ–∑–∞ –Ω–∞ –¥–æ–º, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \nüëá\n<b>‚úâ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É –≤–∏–∑–∏—Ç–∞</b>",
        parse_mode=ParseMode.HTML,
        reply_markup=reg_keyboard,

    )

@dp.message_handler(Text(equals="‚ùé –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))
async def menu_button(message: types.Message, state: FSMContext):
    await bot.send_message(
        message.chat.id, "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º"
    )

# –¢–µ–ø–µ—Ä—å –ø—Ä–æ–ø–∏—à–µ–º —Ü–µ–ø–æ—á–∫—É —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤ –¥–ª—è –∞–Ω–∫–µ—Ç—ã
@dp.message_handler(Text(equals="üì© –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É –≤–∏–∑–∏—Ç–∞"), state="*")
async def date_z(message: types.Message, state: FSMContext):
    await bot.send_message(
        message.chat.id,
        f"<b>–î–∞—Ç–∞(–¥–¥.–º–º.–≥–≥):</b>\n\n"
        f"üîî –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é –¥–∞—Ç—É \n\n ‚ùå –í–∞–∂–Ω–æ! –ï—Å–ª–∏ –Ω—É–∂–Ω–∞—è –¥–∞—Ç–∞ (–∫–Ω–æ–ø–∫–∞ —Å –¥–∞—Ç–æ–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç), –∑–Ω–∞—á–∏—Ç –¥–µ–Ω—å —É–∂–µ —Ä–∞—Å–ø–∏—Å–∞–Ω!",
        parse_mode=ParseMode.HTML,
        reply_markup=date_button
    )

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Å—Ç–µ–π—Ç
    await Anketa.date_z.set()
@dp.message_handler(state=Anketa.date_z, content_types=types.ContentTypes.TEXT)
async def timer_r(message: types.Message, state: FSMContext):
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –≤ storage
    await state.update_data(date_z=message.text)
    await bot.send_message(
        message.chat.id,
        f"<b>–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤–∏–∑–∏—Ç–∞ –î–µ–¥–∞ –ú–æ—Ä–æ–∑–∞:</b>\n\n"
        f"üîî –£ –Ω–∞—Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª. –í—Ä–µ–º–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏–±—ã—Ç–∏—è 2 —á–∞—Å–∞",
         parse_mode=ParseMode.HTML,
         reply_markup=time_button
    )
    await Anketa.timer_r.set()

#–¥–∞—Ç–∞ —Ä–µ–º–æ–Ω—Ç–∞
@dp.message_handler(state=Anketa.timer_r, content_types=types.ContentTypes.TEXT)
async def model_r(message: types.Message, state: FSMContext):
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –≤ storage
    await state.update_data(timer_r=message.text)
    await bot.send_message(
        message.chat.id, "<b>–í–∞—à–µ –∏–º—è:\n üîî –ö–∞–∫ –∫ –í–∞–º –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?</b>", reply_markup=cancel_keyboard, parse_mode=ParseMode.HTML,
    )
    await Anketa.model_r.set()

#–≤—Ä–µ–º—è —Ä–µ–º–æ–Ω—Ç–∞
@dp.message_handler(state=Anketa.model_r, content_types=types.ContentTypes.TEXT)
async def name_c(message: types.Message, state: FSMContext):
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –≤ storage
    await state.update_data(model_r=message.text)
    await bot.send_message(
        message.chat.id, "<b>–í–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n üîî –ú–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä WhatsApp, Viber, Telegram\n\n–ù–∞–ø—Ä–∏–º–µ—Ä:\n +7 777 777 777 –µ—Å–ª–∏ –º–æ–∂–Ω–æ –ø–æ WhatsApp</b>", reply_markup=cancel_keyboard, parse_mode=ParseMode.HTML,
    )

    await Anketa.nomer_ts.set()

    @dp.message_handler(state=Anketa.nomer_ts, content_types=types.ContentTypes.TEXT)
    async def comments(message: types.Message, state: FSMContext):
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –≤ storage
        await state.update_data(nomer_ts=message.text)
        await bot.send_message(
            message.chat.id, "<b>–í–∞—à —ç–º–∏—Ä–∞—Ç: \n üîî –£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≠–º–∏—Ä–∞—Ç –≥–¥–µ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.</b>",
            reply_markup=cancel_keyboard,
            parse_mode=ParseMode.HTML
        )

        await Anketa.comments.set()

#—Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message_handler(state=Anketa.comments, content_types=types.ContentTypes.TEXT)
async def text(message: types.Message, state: FSMContext):
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –≤ storage
    await state.update_data(name_c=message.text)
    await bot.send_message(
        message.chat.id, "<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:\n üîî –ú–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –í–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</b>",
        reply_markup=next_com_keyboard,
        parse_mode=ParseMode.HTML
    )

    await Anketa.text.set()


@dp.message_handler(state=Anketa.text, content_types=types.ContentTypes.TEXT)
async def confirmation(message: types.Message, state: FSMContext):
    await state.update_data(text=message.text)
    data = await state.get_data()
    await bot.send_message(
        message.chat.id, "‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–∑–∏—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n\n –ú—ã —Å –í–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è!",
        reply_markup=reg_keyboard,

    )

    # Insert –ë–î
    workers.insert_one(
        {
            "–î–∞—Ç–∞": data.get("date_z"),
            "–í—Ä–µ–º—è": data.get("timer_r"),
            "–ò–º—è": data.get("model_r"),
            "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞": data.get("nomer_ts"),
            "–≠–º–∏—Ä–∞—Ç": data.get("name_c"),
            "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": data.get("text"),
        }
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –∞–¥–º–∏–Ω–æ–≤ —Å –∞–Ω–∫–µ—Ç–æ–π –∏ –¥–æ–±–∞–≤–ª—è–µ–º 2 –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ —Å callback –¥–∞–Ω–Ω—ã–º–∏
    await bot.send_message(
        admin_chat_id,
        f"<b>–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ –æ—Ç</b> @{message.from_user.username}\n\n"
        f'<b>–î–∞—Ç–∞:</b> {data.get("date_z")}\n'
        f'<b>–í—Ä–µ–º—è:</b> {data.get("timer_r")}\n\n'
        f'<b>–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞:</b> {data.get("model_r")}\n'
        f'<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {data.get("nomer_ts")}\n'
        f'<b>–≠–º–∏—Ä–∞—Ç –∫–ª–∏–µ–Ω—Ç–∞:</b> {data.get("name_c")}\n\n'
        f'<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data.get("text")}',
        parse_mode=ParseMode.HTML,
        reply_markup=inline(
            f"{message.chat.id}",
            f"{message.from_user.username}",
            f'{"text"}',
            f'{"model_r"}',
        ),
    )
    await bot.send_message(
        priem_chat_id,
        f"<b>–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ –æ—Ç</b> @{message.from_user.username}\n\n"
        f'<b>–î–∞—Ç–∞:</b> {data.get("date_z")}\n'
        f'<b>–í—Ä–µ–º—è:</b> {data.get("timer_r")}\n\n'
        f'<b>–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞:</b> {data.get("model_r")}\n'
        f'<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {data.get("nomer_ts")}\n'
        f'<b>–≠–º–∏—Ä–∞—Ç –∫–ª–∏–µ–Ω—Ç–∞:</b> {data.get("name_c")}\n\n'
        f'<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data.get("text")}',
        parse_mode=ParseMode.HTML,
        reply_markup=inline2(
            f"{message.chat.id}",
            f"{message.from_user.username}",
            f'{"text"}',
            f'{"model_r"}',
        ),
    )

    # –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º "–æ–ø—Ä–æ—Å"
    await state.finish()


# –¢–µ–ø–µ—Ä—å –ø—Ä–æ–ø–∏—à–µ–º —Ö—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è inline

@dp.callback_query_handler(reg_callback.filter(status="0"))
# callback –¥–∞–Ω–Ω—ã–µ –º—ã —Å—Ä–∞–∑—É –∂–µ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã
async def decline(call: CallbackQuery, callback_data: dict):
    await call.answer()
    print(call.message.message_id, "‚ùå –û–¢–ú–ï–ù–ï–ù–û")
    await call.message.forward(priem_chat_id, call.message.message_id)
    # –†–µ–¥–∞—á–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –∞–¥–º–∏–Ω–æ–≤
    await bot.edit_message_text(

        "‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.", admin_chat_id, call.message.message_id
    )
    await bot.send_message(
        priem_chat_id,

        "‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –í–∏–∑–∞—Ç–∞ –Ω–µ –±—É–¥–µ—Ç!"
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–µ—Ä–¥–∏–∫—Ç.
    await bot.send_message(int(callback_data.get("chat_id")), "‚ùå –ó–∞—è–≤–∫–∞ –û–¢–ö–õ–û–ù–ï–ù–ê. –í–∏–∑–∏—Ç–∞ –Ω–µ –±—É–¥–µ—Ç!")

@dp.callback_query_handler(reg_callback.filter(status="00"))
# callback –¥–∞–Ω–Ω—ã–µ –º—ã —Å—Ä–∞–∑—É –∂–µ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã
async def decline(call: CallbackQuery, callback_data: dict):
    await call.answer()
    print(call.message.message_id, "‚ùå –û–¢–ö–õ–û–ù–ï–ù–û")
    await call.message.forward(admin_chat_id, call.message.message_id)
    await call.message.forward(priem_chat_id, call.message.message_id)
    # –†–µ–¥–∞—á–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –∞–¥–º–∏–Ω–æ–≤
    await bot.edit_message_text(

        "‚ùå –ó–∞—è–≤–∫–∞ –û–¢–ú–ï–ù–ï–ù–ê. –ö—Ç–æ-—Ç–æ –æ—Ç–º–µ–Ω–∏–ª –∑–∞—è–≤–∫—É! –í–∏–∑–∏—Ç–∞ –Ω–µ –±—É–¥–µ—Ç!", priem_chat_id, call.message.message_id
    )
    await bot.send_message(
        admin_chat_id,

        "‚òù –í–æ—Ç —ç—Ç–∞\n"
        "‚ùå –ó–∞—è–≤–∫–∞ –û–¢–ú–ï–ù–ï–ù–ê. –ö—Ç–æ-—Ç–æ –æ—Ç–º–µ–Ω–∏–ª –∑–∞—è–≤–∫—É! –í–∏–∑–∏—Ç–∞ –Ω–µ –±—É–¥–µ—Ç!\n\n"
        "‚Äº –ï—Å–ª–∏ –æ—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Å–ª—É—á–∞–π–Ω–æ –∏–ª–∏ –ø–æ –æ—à–∏–±–∫–µ, –¥–∞–Ω–Ω—É—é –∑–∞—è–≤–∫—É –º–æ–∂–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å –∏ –ø–µ—Ä–µ—Å–ª–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ –≤ –≥—Ä—É–ø–ø—É!",


    )
    await bot.send_message(
        priem_chat_id,

        "‚òù –í–æ—Ç —ç—Ç–∞\n"
        "‚ùå –ó–∞—è–≤–∫–∞ –û–¢–ú–ï–ù–ï–ù–ê. –ö—Ç–æ-—Ç–æ –æ—Ç–º–µ–Ω–∏–ª –∑–∞—è–≤–∫—É! –í–∏–∑–∏—Ç–∞ –Ω–µ –±—É–¥–µ—Ç!\n\n"
        "‚Äº –ï—Å–ª–∏ –æ—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Å–ª—É—á–∞–π–Ω–æ –∏–ª–∏ –ø–æ –æ—à–∏–±–∫–µ, —Å–æ–æ–±—â–∏—Ç–µ –º–Ω–µ @casqeaux",

    )


@dp.callback_query_handler(reg_callback.filter(status="1"))
async def accept(call: CallbackQuery, callback_data: dict, ):
    await call.answer()
    print(call.message.message_id, "‚úÖ –û–î–û–ë–†–ï–ù–û")
    await call.message.forward(priem_chat_id, call.message.message_id)
    await bot.edit_message_text(
        "‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è.", admin_chat_id, call.message.message_id

    )
    await bot.send_message(
        priem_chat_id,

        "‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ –æ–¥–æ–±—Ä–µ–Ω–∞."
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–µ—Ä–¥–∏–∫—Ç.
    await bot.send_message(
        int(callback_data.get("chat_id")), "üî• –ó–∞—è–≤–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ –æ–¥–æ–±—Ä–µ–Ω–∞. \n –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –≥—Ä—É–ø–ø—É –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è", reply_markup=reg_keyboard,
    )

    @dp.message_handler(Text(equals="–∑–∞—è–≤–∫–∏"), state="*")
    async def problem(message: types.Message, state: FSMContext):
        await bot.send_message(
            message.chat.id,
            f"<b>üëâ –°–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫:</b> https://bit.ly/3yj7Rjq",
            parse_mode=ParseMode.HTML,

        )

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    executor.start_polling(dp, skip_updates=True)